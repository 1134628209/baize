user                    root;
worker_processes        8;
worker_rlimit_nofile    562144;
worker_cpu_affinity     00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000;

error_log   /dev/null crit;
pid        /usr/local/baize/baize_nginx.pid;

events {
    use epoll;
    multi_accept on;
    worker_connections  300000;
}

http {
    include             mime.types;
    default_type        application/octet-stream;
    log_format custom_log   '$remote_addr, $http_x_forwarded_for $remote_user [$time_local] $request_time '
                            '$request_method $request_length "http://$host:$server_port$request_uri" $server_protocol '
                            '$status $sent_http_content_type $bytes_sent $sent_http_content_length '
                            '"$http_referer" "$http_user_agent" $http_x_forwarded_for $tcpinfo_rtt $tcpinfo_rttvar';
    access_log /dev/null custom_log;
    server_names_hash_bucket_size   128;
    client_header_buffer_size       32k;
    large_client_header_buffers     4 32k;
    client_max_body_size 100m;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   3000;
    send_timeout        3000;
    server_tokens       off;
    server {
        listen  8101;
        server_name localhost;
        root /usr/local/baize/;
        location /static {
            root /usr/local/baize/;
        }
        location /files/download {
            root /usr/local/baize/;
        }
        location / {
            
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            uwsgi_connect_timeout 3000;
            uwsgi_read_timeout 3000;
            uwsgi_send_timeout 3000;
            uwsgi_pass      unix:/usr/local/baize/baize_uwsgi.sock;
            include         uwsgi_params;
            
            
        }

        location /nginx-status {
            allow 127.0.0.0/8;
            deny all;
            stub_status on;
            access_log  off;
        }
    }
}
